{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"animated\", \"borderColor\", \"borderWidth\", \"children\", \"color\", \"progress\", \"rotation\", \"size\", \"style\", \"unfilledColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg } from 'react-native-svg';\nimport Circle from \"./Shapes/Circle\";\nimport Sector from \"./Shapes/Sector\";\nimport withAnimation from \"./withAnimation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CIRCLE = Math.PI * 2;\nvar AnimatedSvg = Animated.createAnimatedComponent(Svg);\nvar AnimatedSector = Animated.createAnimatedComponent(Sector);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden'\n  }\n});\nexport var ProgressPie = function (_Component) {\n  _inherits(ProgressPie, _Component);\n  var _super = _createSuper(ProgressPie);\n  function ProgressPie() {\n    _classCallCheck(this, ProgressPie);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ProgressPie, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        animated = _this$props.animated,\n        borderColor = _this$props.borderColor,\n        borderWidth = _this$props.borderWidth,\n        children = _this$props.children,\n        color = _this$props.color,\n        progress = _this$props.progress,\n        rotation = _this$props.rotation,\n        size = _this$props.size,\n        style = _this$props.style,\n        unfilledColor = _this$props.unfilledColor,\n        restProps = _objectWithoutProperties(_this$props, _excluded);\n      var Surface = rotation ? AnimatedSvg : Svg;\n      var Shape = animated ? AnimatedSector : Sector;\n      var angle = animated ? Animated.multiply(progress, CIRCLE) : progress * CIRCLE;\n      var radius = size / 2 - borderWidth;\n      var offset = {\n        top: borderWidth,\n        left: borderWidth\n      };\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: [styles.container, style]\n      }, restProps), {}, {\n        children: [_jsxs(Surface, {\n          width: size,\n          height: size,\n          style: rotation ? {\n            transform: [{\n              rotate: rotation.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['0deg', '360deg']\n              })\n            }]\n          } : undefined,\n          children: [unfilledColor ? _jsx(Circle, {\n            radius: radius,\n            offset: offset,\n            fill: unfilledColor\n          }) : false, _jsx(Shape, {\n            radius: radius,\n            angle: angle,\n            offset: offset,\n            fill: color\n          }), borderWidth ? _jsx(Circle, {\n            radius: size / 2,\n            stroke: borderColor || color,\n            strokeWidth: borderWidth\n          }) : false]\n        }), children]\n      }));\n    }\n  }]);\n  return ProgressPie;\n}(Component);\nProgressPie.propTypes = {\n  animated: PropTypes.bool,\n  borderColor: PropTypes.string,\n  borderWidth: PropTypes.number,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  progress: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Animated.Value)]),\n  rotation: PropTypes.instanceOf(Animated.Value),\n  size: PropTypes.number,\n  style: PropTypes.any,\n  unfilledColor: PropTypes.string\n};\nProgressPie.defaultProps = {\n  borderWidth: 1,\n  color: 'rgba(0, 122, 255, 1)',\n  progress: 0,\n  size: 40\n};\nexport default withAnimation(ProgressPie, 0.2);","map":{"version":3,"names":["React","Component","PropTypes","Svg","Circle","Sector","withAnimation","CIRCLE","Math","PI","AnimatedSvg","Animated","createAnimatedComponent","AnimatedSector","styles","StyleSheet","create","container","backgroundColor","overflow","ProgressPie","props","animated","borderColor","borderWidth","children","color","progress","rotation","size","style","unfilledColor","restProps","Surface","Shape","angle","multiply","radius","offset","top","left","transform","rotate","interpolate","inputRange","outputRange","undefined","propTypes","bool","string","number","node","oneOfType","instanceOf","Value","any","defaultProps"],"sources":["C:/Users/CristianSfetcu/experiments/rn-SocialMedia/node_modules/react-native-progress/Pie.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Svg } from 'react-native-svg';\n\nimport Circle from './Shapes/Circle';\nimport Sector from './Shapes/Sector';\nimport withAnimation from './withAnimation';\n\nconst CIRCLE = Math.PI * 2;\n\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\nconst AnimatedSector = Animated.createAnimatedComponent(Sector);\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n});\n\nexport class ProgressPie extends Component {\n  static propTypes = {\n    animated: PropTypes.bool,\n    borderColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    color: PropTypes.string,\n    children: PropTypes.node,\n    progress: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.instanceOf(Animated.Value),\n    ]),\n    rotation: PropTypes.instanceOf(Animated.Value),\n    size: PropTypes.number,\n    style: PropTypes.any,\n    unfilledColor: PropTypes.string,\n  };\n\n  static defaultProps = {\n    borderWidth: 1,\n    color: 'rgba(0, 122, 255, 1)',\n    progress: 0,\n    size: 40,\n  };\n\n  render() {\n    const {\n      animated,\n      borderColor,\n      borderWidth,\n      children,\n      color,\n      progress,\n      rotation,\n      size,\n      style,\n      unfilledColor,\n      ...restProps\n    } = this.props;\n\n    const Surface = rotation ? AnimatedSvg : Svg;\n    const Shape = animated ? AnimatedSector : Sector;\n\n    const angle = animated\n      ? Animated.multiply(progress, CIRCLE)\n      : progress * CIRCLE;\n    const radius = size / 2 - borderWidth;\n    const offset = {\n      top: borderWidth,\n      left: borderWidth,\n    };\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Surface\n          width={size}\n          height={size}\n          style={\n            rotation\n              ? {\n                  transform: [\n                    {\n                      rotate: rotation.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                  ],\n                }\n              : undefined\n          }\n        >\n          {unfilledColor ? (\n            <Circle radius={radius} offset={offset} fill={unfilledColor} />\n          ) : (\n            false\n          )}\n          <Shape radius={radius} angle={angle} offset={offset} fill={color} />\n          {borderWidth ? (\n            <Circle\n              radius={size / 2}\n              stroke={borderColor || color}\n              strokeWidth={borderWidth}\n            />\n          ) : (\n            false\n          )}\n        </Surface>\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default withAnimation(ProgressPie, 0.2);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
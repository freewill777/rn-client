{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { createRef, useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Fonts, Colors, Sizes } from \"../../constants/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Story2Screen = function Story2Screen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedColors = route.params.selectedColors;\n  var _useState = useState(route.params.storyValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    storyValue = _useState2[0],\n    setStoryValue = _useState2[1];\n  var inputRef = createRef();\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      translucent: true,\n      backgroundColor: \"transparent\"\n    }), _jsxs(LinearGradient, {\n      colors: selectedColors,\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 1,\n        y: 0\n      },\n      style: {\n        flex: 1,\n        justifyContent: 'space-between'\n      },\n      children: [header(), contentInfo(), shareStoryButton()]\n    })]\n  });\n  function shareStoryButton() {\n    return _jsx(TouchableOpacity, {\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        navigation.push('BottomTabBar');\n      },\n      style: styles.shareStoryButtonStyle,\n      children: _jsx(Text, {\n        style: _objectSpread({}, Fonts.primaryColor16SemiBold),\n        children: \"Share Story\"\n      })\n    });\n  }\n  function content() {\n    return _jsx(View, {\n      style: {\n        alignItems: 'center'\n      },\n      children: _jsx(TextInput, {\n        ref: inputRef,\n        value: storyValue,\n        onChangeText: function onChangeText(value) {\n          return setStoryValue(value);\n        },\n        style: _objectSpread(_objectSpread({}, Fonts.whiteColor20ExtraBold), {}, {\n          textAlign: 'center',\n          marginHorizontal: Sizes.fixPadding * 2.0\n        }),\n        multiline: true,\n        cursorColor: Colors.whiteColor\n      })\n    });\n  }\n  function contentInfo() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center'\n      },\n      children: _jsx(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'center'\n        },\n        children: content()\n      })\n    });\n  }\n  function header() {\n    return _jsxs(View, {\n      style: styles.headerWrapStyle,\n      children: [_jsx(MaterialIcons, {\n        name: \"close\",\n        size: 24,\n        color: Colors.whiteColor,\n        onPress: function onPress() {\n          navigation.pop();\n        }\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(TouchableOpacity, {\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            inputRef.current.focus();\n          },\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/icons/editStory.png\"),\n            style: styles.iconStyle\n          })\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            inputRef.current.focus();\n          },\n          style: {\n            marginHorizontal: Sizes.fixPadding + 5.0\n          },\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/icons/text.png\"),\n            style: styles.iconStyle\n          })\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            inputRef.current.focus();\n          },\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/icons/sticker.png\"),\n            style: styles.iconStyle\n          })\n        })]\n      })]\n    });\n  }\n};\nexport default Story2Screen;\nvar styles = StyleSheet.create({\n  headerWrapStyle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginHorizontal: Sizes.fixPadding * 2.0,\n    marginBottom: Sizes.fixPadding + 5.0,\n    marginTop: Sizes.fixPadding * 2.0 + StatusBar.currentHeight\n  },\n  iconStyle: {\n    width: 18.0,\n    height: 18.0,\n    resizeMode: 'contain',\n    tintColor: Colors.whiteColor\n  },\n  shareStoryButtonStyle: {\n    backgroundColor: Colors.whiteColor,\n    borderRadius: Sizes.fixPadding * 2.0,\n    paddingHorizontal: Sizes.fixPadding * 2.0,\n    paddingVertical: Sizes.fixPadding,\n    alignSelf: 'flex-end',\n    marginHorizontal: Sizes.fixPadding * 2.0,\n    marginBottom: Sizes.fixPadding * 4.0,\n    marginTop: Sizes.fixPadding + 5.0\n  }\n});","map":{"version":3,"names":["React","createRef","useState","LinearGradient","MaterialIcons","Fonts","Colors","Sizes","Story2Screen","navigation","route","selectedColors","params","storyValue","setStoryValue","inputRef","flex","x","y","justifyContent","header","contentInfo","shareStoryButton","push","styles","shareStoryButtonStyle","primaryColor16SemiBold","content","alignItems","value","whiteColor20ExtraBold","textAlign","marginHorizontal","fixPadding","whiteColor","flexGrow","headerWrapStyle","pop","flexDirection","current","focus","require","iconStyle","StyleSheet","create","marginBottom","marginTop","StatusBar","currentHeight","width","height","resizeMode","tintColor","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","alignSelf"],"sources":["C:/Users/CristianSfetcu/experiments/rn-SocialMedia/screens/story2/story2Screen.js"],"sourcesContent":["import { StyleSheet, Text, View, SafeAreaView, StatusBar, TextInput, Image, ScrollView, TouchableOpacity } from 'react-native'\r\nimport React, { createRef, useState } from 'react'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Fonts, Colors, Sizes } from '../../constants/styles';\r\n\r\nconst Story2Screen = ({ navigation, route }) => {\r\n\r\n    const selectedColors = route.params.selectedColors;\r\n    const [storyValue, setStoryValue] = useState(route.params.storyValue);\r\n\r\n    const inputRef = createRef();\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1, }}>\r\n            <StatusBar translucent={true} backgroundColor=\"transparent\" />\r\n            <LinearGradient\r\n                colors={selectedColors}\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 0 }}\r\n                style={{ flex: 1, justifyContent: 'space-between' }}\r\n            >\r\n                {header()}\r\n                {contentInfo()}\r\n                {shareStoryButton()}\r\n            </LinearGradient>\r\n        </SafeAreaView>\r\n    )\r\n\r\n    function shareStoryButton() {\r\n        return (\r\n            <TouchableOpacity\r\n                activeOpacity={0.8}\r\n                onPress={() => { navigation.push('BottomTabBar') }}\r\n                style={styles.shareStoryButtonStyle}\r\n            >\r\n                <Text style={{ ...Fonts.primaryColor16SemiBold }}>\r\n                    Share Story\r\n                </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    function content() {\r\n        return (\r\n            <View style={{ alignItems: 'center' }}>\r\n                <TextInput\r\n                    ref={inputRef}\r\n                    value={storyValue}\r\n                    onChangeText={(value) => setStoryValue(value)}\r\n                    style={{ ...Fonts.whiteColor20ExtraBold, textAlign: 'center', marginHorizontal: Sizes.fixPadding * 2.0 }}\r\n                    multiline\r\n                    cursorColor={Colors.whiteColor}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function contentInfo() {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <ScrollView\r\n                    showsVerticalScrollIndicator={false}\r\n                    contentContainerStyle={{ flexGrow: 1, justifyContent: 'center' }}\r\n                >\r\n                    {content()}\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function header() {\r\n        return (\r\n            <View style={styles.headerWrapStyle}>\r\n                <MaterialIcons name=\"close\" size={24} color={Colors.whiteColor} onPress={() => { navigation.pop() }} />\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.8}\r\n                        onPress={() => { inputRef.current.focus() }}\r\n                    >\r\n                        <Image\r\n                            source={require('../../assets/images/icons/editStory.png')}\r\n                            style={styles.iconStyle}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.8}\r\n                        onPress={() => { inputRef.current.focus() }}\r\n                        style={{ marginHorizontal: Sizes.fixPadding + 5.0 }}\r\n                    >\r\n                        <Image\r\n                            source={require('../../assets/images/icons/text.png')}\r\n                            style={styles.iconStyle}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.8}\r\n                        onPress={() => { inputRef.current.focus() }}\r\n                    >\r\n                        <Image\r\n                            source={require('../../assets/images/icons/sticker.png')}\r\n                            style={styles.iconStyle}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Story2Screen\r\n\r\nconst styles = StyleSheet.create({\r\n    headerWrapStyle: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: Sizes.fixPadding * 2.0,\r\n        marginBottom: Sizes.fixPadding + 5.0,\r\n        marginTop: (Sizes.fixPadding * 2.0) + StatusBar.currentHeight\r\n    },\r\n    iconStyle: {\r\n        width: 18.0,\r\n        height: 18.0,\r\n        resizeMode: 'contain',\r\n        tintColor: Colors.whiteColor\r\n    },\r\n    shareStoryButtonStyle: {\r\n        backgroundColor: Colors.whiteColor,\r\n        borderRadius: Sizes.fixPadding * 2.0,\r\n        paddingHorizontal: Sizes.fixPadding * 2.0,\r\n        paddingVertical: Sizes.fixPadding,\r\n        alignSelf: 'flex-end',\r\n        marginHorizontal: Sizes.fixPadding * 2.0,\r\n        marginBottom: Sizes.fixPadding * 4.0,\r\n        marginTop: Sizes.fixPadding + 5.0,\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}